"character"
{
	"name"		"Demopan"		//The name of this character.
	"class"		"4"						//The character's class, 1-9. Corresponds to the classes in the class select screen, IE 1 is scout, 2 is soldier, 3 is pyro, etc.
	"model"		"models/player/demo.mdl"		//The mdl file to use for this character.
	"health"	"700"		//Character's max health.
	"speed"		"280.0"
	"scale"		"1.14"		//Character's model scale. This affects hitboxes and collision as well. Be careful with making this too big; the feature is programmed so that this is only applied when the player is in a location where they would not get stuck at this scale, but this does not account for characters being too big to get out of the spawn door!
	
	"menu_display"		//Determines what to show in the !character menu when selecting this character. Uses the values defined in game_rules if this is left blank.
	{
		"related_class"		"Demoknight"			//The TF2 class this character is most related to. Can be anything. If your character is not related to any of the classes to a significant degree, I recommend writing "Wildcard".
		"role"				"Tank"				//This character's role in the roster. Can be anything. I recommend choosing between DPS, Tank, and Support.
		"description"		"Wields a heavy frying pan with high damage.\nGains Refined on-kill, and has shield charge.\nM3: Hold and release to throw a chunk of Refined, which explodes on impact.\nR: Hold to deploy a medigun shield."			//A brief description of this character's abilities and intended playstyle.
		"lore_description"	"Formerly a high-class aristocrat in the trading scene, Demopan\nlost most of his wealth during the Crate Depression. He hopes that by\njoining the war, he can become a war hero and use that reputation to regain his wealth."			//A description of this character's personality and lore, if wanted.
	}
	
	"ultimate_stats"	//Stats governing this character's Ultimate Ability. Can be removed to make this character not have an Ultimate Ability.
	{
		"name"			"GLOBAL TRADE"	//The name of this ultimate.
		"charge"		"10000.0"	//The amount of charge this character's ultimate requires in order to be used.
		"on_regen"		"0.02"		//Percentage of Ultimate Charge passively generated every second.
		"on_damage"		"0.125"		//Ultimate Charge gained per point of damage dealt.
		"on_hurt"		"0.5"		//Ultimate Charge gained per point of damage taken.
		"on_heal"		"0.0"		//Ultimate Charge gained per point of healing given to allies.
		"on_kill"		"150.0"		//Ultimate Charge gained per kill.
		"cooldown"		"12.0"		//Duration to block ultimate from being charged after it is used.
		"max_scale"		"0.0"		//Block this ability from being used if the user would get stuck at this scale. Mainly used to block abilities that make the user bigger. 0.0 or below: ignore scale.
	}
	
	"special_resource"	//A primitive system for special resources, like mana for example. Used for M2, M3, and Reload abilities. Can be left blank to make this character not use a special resource.
	{
		"is_ult"		"0"			//If set to any other value than 0, Ultimate Charge is used as the resource. **** EVERY OTHER VARIABLE LISTED HERE IS IGNORED IF THIS IS ENABLED! ****
		"name"			"Refined"		//The name of this resource.
		"name_plural"	"Refined"		//The name of this resource to use if the player does not have EXACTLY one of it.
		"start"			"2.0"		//Resource this character spawns with. 
		"preserve"		"0.0"		//Percentage of resources to preserve on death. Overrides "start" if the amount of resources preserved by this would be greater, otherwise start is used. 
		"max"			"4.0"		//Max Resource
		"on_regen"		"0.0"		//Amount of resource passively generated every tenth of a second. 
		"on_damage"		"0.0"		//Resource gained per point of damage dealt. 
		"on_hurt"		"0.0"		//Resource gained per point of damage taken.
		"on_heal"		"0.0"		//Resource gained per point of healing given to allies. 
		"on_kill"		"2.0"		//Resource gained per kill.
		"sound_amt"		"2.0"		//Every X resource(s) gained, trigger sound_resource_gained.
		"ignore_resupply"	"0"		//If set to any value other than 0, resupply lockers have no effect on your resources.
	}
	
	"m3_ability"		//Stats governing this character's M3 ability (all abilities which use slot 3). Can be removed or left blank to make this character not have an M3 ability.
	{
		"name"			"Profit Blast"				//The name of this ability.
		"cooldown"		"1.0"							//Ability Cooldown
		"starting_cd"	"0.0"							//Cooldown applied to this ability when the character spawns.
		"cost"			"1.0"							//Special resource cost to use this ability, if this character uses a special resource.
		"held"			"1"								//Set to 0 if this ability is not held, any other value if it is. Held abilities are activated when their button is pressed if they are off cooldown and the user has enough resources to use it, but the cooldown and cost are not applied until the button is released. This functionality will usually only be relevant to custom ability plugins.
		"max_scale"		"0.0"							//Block this ability from being used if the user would get stuck at this scale. Mainly used to block abilities that make the user bigger. 0.0 or below: ignore scale.
		"held_block"	"1"								//Applies only to held abilities. While this ability is held: should all other abilities be blocked?
	}
	
	"reload_ability"		//Stats governing this character's R ability (all abilities which use slot 4). Can be removed or left blank to make this character not have an R ability.
	{
		"name"			"Refined Protection"			//The name of this ability.
		"cooldown"		"30.0"							//Ability Cooldown
		"starting_cd"	"0.0"							//Cooldown applied to this ability when the character spawns.
		"cost"			"4.0"							//Special resource cost to use this ability, if this character uses a special resource.
		"held"			"1"								//Set to 0 if this ability is not held, any other value if it is. Held abilities are activated when their button is pressed if they are off cooldown and the user has enough resources to use it, but the cooldown and cost are not applied until the button is released. This functionality will usually only be relevant to custom ability plugins.
		"max_scale"		"0.0"							//Block this ability from being used if the user would get stuck at this scale. Mainly used to block abilities that make the user bigger. 0.0 or below: ignore scale.
		"grounded"		"0"								//Block this ability from being used if the user is not on the ground.
		"held_block"	"1"								//Applies only to held abilities. While this ability is held: should all other abilities be blocked?
	}
	
	"weapons"			//Weapons equipped by this character (this DOES NOT include items like shields, base jumper, etc. See wearables for those). Defaults to whatever is in game_rules.cfg if left blank.
	{
		"weapon_1"
		{
			"classname"			"saxxy"	//The weapon's classname.
			"index"				"264"					//The weapon's index.
			"level"				"42"				//The weapon's level. Purely cosmetic.
			"quality"			"5"					//The weapon's quality. Purely cosmetic.
			"slot"				"2"					//The weapon's slot. 0 is primary, 1 is secondary, 2 is melee.
			"reserve"			"0"				//Ammo held on reserve. Note that you will need to add the max ammo and clip size attributes yourself, this is just for the ammo you spawn with.
			"clip"				"0"				//Ammo in the clip.
			"attributes"		"2 ; 2.0 ; 781 ; 1.0 ; 396 ; 1.66 ; 2034 ; 0.33 ; 246 ; 999.0 ; 248 ; 2.0 ; 249 ; 0.66"		//The weapon's attributes.
			"visible"			"1"					//If set to 1, the weapon can be seen by players. Otherwise, it is invisible. The weapon will ALWAYS be visible to the user in first-person, set "model_override" to "models/empty.mdl" if you want it to be completely invisible to everybody.
			"unequip"			"1"				//When this weapon is spawned, should the weapon previously held in this weapon's slot be unequipped?
			"fire_ability"		""				//Optional ability name of the ability to activate when this weapon shoots.
			"fire_plugin"		""				//Optional plugin name of the ability to activate when this weapon shoots.
			"fire_sound"		""				//Optional sound slot (IE "sound_shoot_gun") as specified in "sounds" to use when this weapon shoots.
		}
	}
	
	"wearables"		//Wearables worn by this character. This refers to items such as Demoman's shields, Demoman's boots, the B.A.S.E. Jumper, and every other item the mercenary wears for a passive bonus instead of holding it out. This ALSO includes every single cosmetic in the game, meaning this can be used to make basic, non-custom-textured TF2 OCs without needing to add downloads to your server. Defaults to whatever is in game_rules if left blank.
	{
		"wearable_1"
		{
			"classname"		"tf_wearable_demoshield"		//The wearable's classname.
			"index"			"131"				//The wearable's index.
			"attributes"	""					//Wearable attributes (only compatible with "on wearer" attributes, IE "+20% movement speed on wearer").
			"visible"		"1"					//If set to 1, the wearable can be seen by players. Obviously you want this to be set to 1 for cosmetics, but setting this to 0 is useful if all you want is a generic wearable that gives constantly-active attribute effects to the wearer.
			"paint"			"0"					//Optional paint index, -1 to ignore. To see a list of all paint indexes, see the Chaos Fortress wiki page ().
			"style"			"0"					//Optional parameter for cosmetics with multiple styles, set to override its style. Style 0 is default.
		}
		"wearable_2"
		{
			"classname"		"tf_wearable"		//The wearable's classname.
			"index"			"295"				//The wearable's index.
			"attributes"	""					//Wearable attributes (only compatible with "on wearer" attributes, IE "+20% movement speed on wearer").
			"visible"		"1"					//If set to 1, the wearable can be seen by players. Obviously you want this to be set to 1 for cosmetics, but setting this to 0 is useful if all you want is a generic wearable that gives constantly-active attribute effects to the wearer.
			"paint"			"0"					//Optional paint index, -1 to ignore. To see a list of all paint indexes, see the Chaos Fortress wiki page ().
			"style"			"0"					//Optional parameter for cosmetics with multiple styles, set to override its style. Style 0 is default.
		}
		"wearable_3"
		{
			"classname"		"tf_wearable"		//The wearable's classname.
			"index"			"332"				//The wearable's index.
			"attributes"	""					//Wearable attributes (only compatible with "on wearer" attributes, IE "+20% movement speed on wearer").
			"visible"		"1"					//If set to 1, the wearable can be seen by players. Obviously you want this to be set to 1 for cosmetics, but setting this to 0 is useful if all you want is a generic wearable that gives constantly-active attribute effects to the wearer.
			"paint"			"0"					//Optional paint index, -1 to ignore. To see a list of all paint indexes, see the Chaos Fortress wiki page ().
			"style"			"0"					//Optional parameter for cosmetics with multiple styles, set to override its style. Style 0 is default.
		}
	}
	
	"abilities"			//Custom abilities used by this character. Does nothing if removed or left blank.
	{
		//REFINED BOMBARDMENT: The user holds the activation button to grab one of their refined metal chunks, and then tosses it like a grenade when the button is released. Thrown chunks explode instantly on contact with any surface, and can be used to blast jump.
		"ability_1"
		{
			"ability_name"	"demopan_refined_bomb"
			
			"slot"			"3"
			
			"damage"		"100.0"		//Base damage dealt
			"velocity"		"1200.0"	//Velocity
			"radius"		"225.0"		//Blast radius
			"falloff_start"	"33.0"		//Distance from the center to begin damage falloff
			"falloff_max"	"0.5"		//Maximum damage falloff, percentage (0.8 = 80%)
			
			"plugin_name"	"cf_demopan"
		}
		
		//REFINED PROTECTION: Demopan deploys a medigun shield which blocks all incoming damage and knocks back enemies who try to walk through it. While the button is held, the medigun shield moves with the user's cursor, allowing them to manually orient the shield at the cost of a move speed penalty. When the button is released, the shield is locked in place and the user can move freely again.
		"ability_2"
		{
			"ability_name"	"demopan_medigun_shield"
			
			"slot"			"4"
			
			"health"		"6000.0"	//How much HP does the medigun shield have?
			"damage"		"25.0"		//Damage dealt to non-übercharged enemies who touch the medigun shield.
			"knockback"		"300.0"		//Knockback velocity applied to enemies who touch the medigun shield.
			"hit_rate"		"0.66"		//Time between instances of damage dealt to the same player.
			"lifespan"		"20.0"		//Medigun shield lifespan, or 0.0 for infinite.
			"model"			"models/props_mvm/mvm_player_shield.mdl"			//Model to use for the shield. Don't change this, it is hard-coded to switch to Demopan's broken shield model when it takes enough damage. If you *do* change it: this model MUST have working physics.
			"scale"			"1.0"		//Shield model scale.
			"distance"		"160.0"		//Distance from the user to hold the medigun shield.
			"height"		"80.0"		//Distance to shift the shield's model downwards from the user's crosshair.
			"speed"			"160.0"		//Movement speed while physically holding the medigun shield.
			
			"plugin_name"	"cf_demopan"
		}
		
		//GLOBAL TRADE: Demopan freezes in place for a short period and then launches into a VERY long shield charge which can fly. Enemies who get too close are damaged and get carried along with him until they either die or somehow escape.
		"ability_3"
		{
			"ability_name"		"demopan_ultimate"

			"slot"				"1"
			
			"delay"				"4.8"	//Delay before the charge begins.
			"duration"			"8.0"	//Duration of the charge.
			"radius"			"300.0"	//Radius in which the charge deals damage.
			"damage"			"50.0"	//Damage to deal per hit.
			"velocity"			"1000.0"	//Charge velocity.
			"hit_rate"			"0.2"	//Time between explosions while charging.

			"plugin_name"		"cf_demopan"
		}
	}
	
	"sounds"
	{
		"sound_heldstart_m3"
		{
			"1"		"vo/demoman_gibberish01.mp3"
			"2"		"vo/demoman_gibberish02.mp3"
			"3"		"vo/demoman_gibberish03.mp3"
			"4"		"vo/demoman_gibberish04.mp3"
			"5"		"vo/demoman_gibberish05.mp3"
			"6"		"vo/demoman_gibberish06.mp3"
			"7"		"vo/demoman_gibberish07.mp3"
			"8"		"vo/demoman_gibberish08.mp3"
			"9"		"vo/demoman_gibberish09.mp3"
			"10"		"vo/demoman_gibberish10.mp3"
			"11"		"vo/demoman_gibberish11.mp3"
			"12"		"vo/demoman_gibberish12.mp3"
			"13"		"vo/demoman_gibberish13.mp3"
		}
		
		"sound_heldend_m3"
		{
			"1"		"vo/demoman_go01.mp3"
		}
		
		"sound_heldstart_reload"
		{
			"1"		"vo/demoman_mvm_resurrect06.mp3"
			"2"		"vo/taunts/demoman_taunts07.mp3"
			"3"		"vo/demoman_battlecry05.mp3"
			"4"		"vo/demoman_battlecry07.mp3"
		}
		
		"sound_spawn_intro"
		{
			"1"		"chaos_fortress/demopan/demopan_intro.mp3"
		}
		
		"sound_spawn_neutral"
		{
			"1"		"vo/demoman_mvm_resurrect03.mp3"
			"2"		"vo/demoman_mvm_resurrect05.mp3"
			"3"		"vo/demoman_mvm_resurrect10.mp3"
		}
		
		"sound_spawn_angry"
		{
			"1"		"vo/demoman_jeers04.mp3"
			"2"		"vo/demoman_jeers06.mp3"
			"3"		"vo/demoman_jeers07.mp3"
		}
		
		"sound_spawn_happy"
		{
			"1"		"vo/taunts/demoman_taunts10.mp3"
			"2"		"vo/taunts/demoman_taunts13.mp3"
			"3"		"vo/taunts/demoman_taunts16.mp3"
		}
		
		"sound_ultimate_react_friendly"
		{
			"1"		"vo/demoman_sf13_influx_big01.mp3"
			"2"		"vo/demoman_sf13_influx_big03.mp3"
			"3"		"vo/demoman_sf13_influx_big02.mp3"
			"4"		"vo/compmode/cm_demo_summary_callout_03.mp3"
			"5"		"vo/compmode/cm_demo_summary_callout_02.mp3"
			"6"		"vo/compmode/cm_demo_summary_callout_05.mp3"
			"7"		"vo/compmode/cm_demo_summary_callout_04.mp3"
		}
		
		"sound_ultimate_react_hostile"
		{
			"1"		"vo/demoman_sf13_bosses06.mp3"
			"2"		"vo/demoman_sf13_bosses02.mp3"
			"3"		"vo/demoman_sf13_bosses04.mp3"
		}
		
		"sound_ultimate_activation"
		{
			"chaos_fortress/demopan/demopan_ult_1.mp3"
			{
				"global"		"1"
				"channel"		"4"
				"level"			"120"
			}
			"chaos_fortress/demopan/demopan_ult_2.mp3"
			{
				"global"		"1"
				"channel"		"4"
				"level"			"120"
			}
		}
		
		"sound_resource_gained"
		{
			"ui/notification_alert.wav"
			{
				"source"	"1"
				"level"		"120"
				"channel"	"0"
				"pitch_min"	"90"
				"pitch_max"	"110"
			}
		}
		
		"sound_refined_bomb_launch"
		{
			"weapons/physcannon/superphys_launch1.wav"
			{
				"level"		"120"
				"channel"	"0"
			}
			"weapons/physcannon/superphys_launch2.wav"
			{
				"level"		"120"
				"channel"	"0"
			}
			"weapons/physcannon/superphys_launch3.wav"
			{
				"level"		"120"
				"channel"	"0"
			}
			"weapons/physcannon/superphys_launch4.wav"
			{
				"level"		"120"
				"channel"	"0"
			}
		}
		
		"sound_refined_bomb_prepare"
		{
			"weapons/physcannon/physcannon_pickup.wav"
			{
				"channel"	"0"
			}
		}
		
		"sound_medigun_shield_start"
		{
			"weapons/medi_shield_deploy.wav"
			{
				"level"		"120"
				"channel"	"0"
			}
		}
	}
	
	"model_download"	//Models get split into five different files which all need to be downloaded. Instead of needing to enter all of those file extensions every single time you make a character config, you can just enter the name of each model here and let Chaos Fortress do the rest.
	{
		"1"		"chaos_fortress/demopan/refined_shield"
	}
	
	"downloads"			//All files added to the downloads table by this character, excluding models. Generally speaking, all of your custom sounds and materials used by this character should be put in here.
	{
		"1"		"sound/chaos_fortress/demopan/demopan_ult_1.mp3"
		"2"		"sound/chaos_fortress/demopan/demopan_ult_2.mp3"
		"3"		"sound/chaos_fortress/demopan/demopan_intro.mp3"
		"4"		"sound/chaos_fortress/demopan/demopan_shield_break_minor.mp3"
		"5"		"sound/chaos_fortress/demopan/demopan_shield_break_final.mp3"
	}
	
	"precache"			//Files to precache when loading the character configs. All files contained in "downloads" get precached automatically, so this is for files that need to be precached but do not need to be downloaded. Usually this will just be default class voice lines.
	{
	}
}